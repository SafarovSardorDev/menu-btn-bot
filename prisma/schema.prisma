datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider        = "prisma-client-py"
    previewFeatures = ["prismaSchemaFolder"]
}

model User {
    id           Int       @id @default(autoincrement())
    telegramId   BigInt    @unique
    firstName    String?
    lastName     String?
    isPremium    Boolean?
    isBot        Boolean   @default(false)
    languageCode String   @default("uz") // User tilini tanlashi uchun
    username     String?
    role         UserRole  @default(user)
    createdAt    DateTime  @default(now())
    updatedAt    DateTime? @updatedAt

    menus        Menu[]  
    feedbacks    Feedback[]
}

model Menu {
    id        Int   @id @default(autoincrement())
    name      String
    feedbacks Feedback[] // Bir menu ko‘p feedbacklarga ega bo‘lishi mumkin
    isActive  Boolean @default(true)  // True bo‘lsa, userlarga ko‘rinadi, false bo‘lsa, faqat adminlarga
    parent    Menu? @relation("menu", fields: [parentId], references: [id], onDelete: Cascade)
    parentId  Int?
    children  Menu[] @relation("menu")
    creator   User   @relation(fields: [creatorId], references: [telegramId])
    creatorId BigInt
    depth     Int   @default(1)
    order     Int   @default(0)
    messages  MenuMessage[]
    createdAt DateTime @default(now())
    updatedAt DateTime?
    
    @@index([creatorId]) 
    @@index([parentId, order])
}


model MenuMessage {
    id        Int       @id @default(autoincrement())
    message   Json
    type      MediaType  
    menu      Menu      @relation(fields: [menuId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    menuId    Int
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model Feedback {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    menu      Menu     @relation(fields: [menuId], references: [id])
    menuId    Int
    message   String   
    createdAt DateTime @default(now())
}

enum UserRole {
    owner
    admin
    user
}

enum MediaType {
    text
    image
    video
    pdf
    document
    link // Link tugmalar uchun qo‘shildi
}
